{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0",
    "description": "API for managing blog posts, users, and comments."
  },
  "host": "localhost:5002",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations related to user authentication"
    },
    {
      "name": "Post",
      "description": "Operations related to blog posts"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "summary": "Returns all posts",
        "tags": ["Post"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sort direction (asc or desc)",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new blog post",
        "tags": ["Post"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized (JWT required)"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string",
                  "example": "newuser"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate user and get JWT",
        "tags": ["User"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "admin123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token issued",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/posts/{id}": {
      "put": {
        "summary": "Update an existing post",
        "tags": ["Post"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to update"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid input or post not found"
          },
          "401": {
            "description": "Unauthorized (JWT required)"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a blog post",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized (JWT required)"
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "summary": "Search posts by fields",
        "tags": ["Post"],
        "produces": ["application/json"],
        "parameters": [
          { "name": "title", "in": "query", "type": "string" },
          { "name": "content", "in": "query", "type": "string" },
          { "name": "author", "in": "query", "type": "string" },
          { "name": "date", "in": "query", "type": "string" },
          { "name": "category", "in": "query", "type": "string" },
          { "name": "tag", "in": "query", "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "post": {
        "summary": "Add a comment to a blog post",
        "tags": ["Post"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the post to comment on"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["text"],
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Great post!"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Comment added successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized (JWT required)"
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "title": { "type": "string" },
        "content": { "type": "string" },
        "author": { "type": "string" },
        "date": { "type": "string" },
        "category": { "type": "string" },
        "tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "NewPost": {
      "type": "object",
      "required": ["title", "content"],
      "properties": {
        "title": { "type": "string", "example": "My first blog post" },
        "content": { "type": "string", "example": "This is the content of the post." },
        "date": { "type": "string", "example": "2025-04-18" },
        "category": { "type": "string", "example": "Tech" },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["flask", "swagger"]
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": { "type": "string", "example": "jane_doe" },
        "text": { "type": "string", "example": "Really helpful post!" },
        "timestamp": { "type": "string", "example": "2025-04-18 14:22" }
      }
    }
  }
}